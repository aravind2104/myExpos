//Init
loadi(65,7);
loadi(66,8);
//Exception
loadi(2,15);
loadi(3,16);
//INT 10
loadi(22,35);
loadi(23,36);
//library
loadi(63,13);
loadi(64,14);
//Timer
loadi(4,17);
loadi(5,18);
//INT 7
loadi(16,29);
loadi(17,30);
//Mul of 2 Program
loadi(83,71);
//Mul of 3 Program
loadi(89,72);
//Module 5
loadi(50,63);
loadi(51,64);

//Init Process with PID=1
PTBR=PAGE_TABLE_BASE+20;
PTLR=10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

//Process Table
[PROCESS_TABLE + 16 + 11] = 80;
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 14] = PTBR;
[PROCESS_TABLE + 16 + 15] = 10;
[PROCESS_TABLE + 16 + 12] = 0;

[76*512] = [65*512 + 1];

//Mul of 2 Progam, PID=2

//Page Table
PTBR = PAGE_TABLE_BASE + 2*20;
PTLR = 10;

//Library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//Heap
[PTBR + 4] = 86;
[PTBR + 5] = "0110";
[PTBR + 6] = 87;
[PTBR + 7] = "0110";

//Code
[PTBR + 8] = 83;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//Stack
[PTBR + 16] = 84;
[PTBR + 17] = "0110";
[PTBR + 18] = 85;
[PTBR + 19] = "0110";

//Process Table
[PROCESS_TABLE + 16*2 + 11] = 88;
[PROCESS_TABLE + 16*2 + 1] = 2;
[PROCESS_TABLE + 16*2 + 13] = 8*512;
[PROCESS_TABLE + 16*2 + 4] = CREATED;
[PROCESS_TABLE + 16*2 + 14] = PTBR;
[PROCESS_TABLE + 16*2 + 15] = 10;
[PROCESS_TABLE + 16*2 + 12] = 0;

[84*512] = [83*512+1];

//Mul of 3, PID 3 

//Page Table
PTBR = PAGE_TABLE_BASE + 3*20;
PTLR = 10;

//Library
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

//Heap
[PTBR + 4] = 92;
[PTBR + 5] = "0110";
[PTBR + 6] = 93;
[PTBR + 7] = "0110";

//Code
[PTBR + 8] = 89;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//Stack
[PTBR + 16] = 90;
[PTBR + 17] = "0110";
[PTBR + 18] = 91;
[PTBR + 19] = "0110";

//Process Table
[PROCESS_TABLE + 16*3 + 11] = 94;
[PROCESS_TABLE + 16*3 + 1] = 3;
[PROCESS_TABLE + 16*3 + 13] = 8*512;
[PROCESS_TABLE + 16*3 + 4] = CREATED;
[PROCESS_TABLE + 16*3 + 14] = PTBR;
[PROCESS_TABLE + 16*3 + 15] = 10;
[PROCESS_TABLE + 16*3 + 12] = 0;

[90*512] = [89*512+1];

alias id R1;
id = 4;
while(id<=15) do
    [PROCESS_TABLE + 16*id + 4] = TERMINATED;
    id = id+1;
endwhile;

return;
